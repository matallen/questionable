apiVersion: v1
kind: Template
metadata:
  name: dynamic-wizard-app-deployment
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APPLICATION_NAME}
      application: ${APPLICATION_NAME}
      template: jws31-tomcat8-basic-s2i
      xpaas: 1.4.12
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JWS_ADMIN_USERNAME
            value: VnTsjJjY
          - name: JWS_ADMIN_PASSWORD
            value: xfnfyTKW
          - name: KIE_MAVEN_SETTINGS_CUSTOM
            value: '/home/jboss/.m2/client-settings.xml'
          image: docker-registry.default.svc:5000/${NAMESPACE}/${APPLICATION_NAME}@sha256:e0f4677bc857ed2039efeab172df7d04ec9fb7b5e08bd8c111024b9cf8bf4813
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl --noproxy '*' -s -u VnTsjJjY:xfnfyTKW 'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                |grep -iq 'stateName *= *STARTED'
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
          namespace: ${NAMESPACE}
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
      application: ${APPLICATION_NAME}
      template: jws31-tomcat8-basic-s2i
      xpaas: 1.4.12
    name: ${APPLICATION_NAME}
  spec:
    path: "/dynamic-wizard-example-app-bc" 
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
      application: ${APPLICATION_NAME}
      template: jws31-tomcat8-basic-s2i
      xpaas: 1.4.12
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
- description: The name for the application.
  displayName: Application name
  name: APPLICATION_NAME
  required: true
  value: dynamic-wizard-app
- description: The namespace for the application.
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: openshift


